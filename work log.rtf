{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033\deflangfe1033{\fonttbl{\f0\fmodern\fprq1\fcharset0 DejaVu Sans Mono;}{\f1\fswiss\fprq2\fcharset0 Calibri;}{\f2\fmodern\fprq1\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;\red144\green139\blue37;\red169\green183\blue198;\red204\green120\blue50;}
{\*\generator Riched20 10.0.10586}{\*\mmathPr\mdispDef1\mwrapIndent1440 }\viewkind4\psz1
{\*\jarte object RichPersist
  Version = 2
  LMarg = 1440
  RMarg = 1440
  TMarg = 1440
  BMarg = 1440
  Equal = True
  Orient = 1
  Size = 1
  Width = 2159
  Height = 2794
  LHdr = '$3B'
  MHdr = '$3B'
  RHdr = '$3B'
  LFtr = '$3B'
  MFtr = '$3B'
  RFtr = '$3B'
  PrtHdr = True
  PrtFtr = True
  HdrMarg = 1440
  FtrMarg = 1440
  HdrFont.Charset = DEFAULT_CHARSET
  HdrFont.Color = clWindowText
  HdrFont.Height = -13
  HdrFont.Name = 'MS Sans Serif'
  HdrFont.Style = []
  Wrap = 2
  WMark = 'None'
  WColor = 13822463
  BlackInk = True
  Collate = True
  SpellDict = 'ssceam2.clx'
end
}\uc1 
\pard\nowidctlpar\qc\f0\fs28 work log, particle port\f1\fs22\par

\pard\nowidctlpar\par
12/14/2016-\par
\tab * found online code snip to read raw resource contents(frag,vert shader) into java string\par
\par
3/29/2017 - 3/31/2017\par
removed template in resizing array, still get non specific error: \par
\tab Execution failed for task ':app:externalNativeBuildDebug'.\par
\par
downloaded & installed new components -- \par
\par
\tab To install:\par
\tab - Android Support Repository (extras;android;m2repository)\par
\tab - Android SDK Tools (tools)\par
\tab - Google Repository (extras;google;m2repository)\par
\tab - NDK (ndk-bundle)\par
\tab - Android Emulator (emulator)\par
\tab Preparing "Install Android Support Repository (revision: 47.0.0)".\par
\tab Downloading {{\field{\*\fldinst{HYPERLINK https://dl.google.com/android/repository/android_m2repository_r47.zip }}{\fldrslt{https://dl.google.com/android/repository/android_m2repository_r47.zip\ul0\cf0}}}}\f1\fs22\par
\par
\par
message:\par
 "patching NDK version 14.0.3770861 to NDK version 14.1.3816874 <-my version according to a.s.\par
\par
3/31/2017 -\par
\tab removed NDK 14.0.3770861.  takes ~2.5 hours\par
\par
4/1/2017 - \par
\tab Installed previous version of NDK, 13b.  no longer get non-specific error and able to build project fine.  built all abis.  next: revert resizing array to template and build.\par
\par
4/2 - \par
\tab build works with templatized resizingArray class\par
\par

\pard\brdrl\brdrdash\brdrw5 \brdrt\brdrdash\brdrw5 \brdrr\brdrdash\brdrw5 \brdrb\brdrdash\brdrw5 \nowidctlpar draws 187 or 113 frames, then quits? and highlights line: 780: \highlight2\f2\fs19 glClear\highlight0 (\cf3 GL_COLOR_BUFFER_BIT \cf4 | \cf3 GL_DEPTH_BUFFER_BIT\cf4 )\cf5 ;. debugger then detaches from running device\par

\pard\nowidctlpar\cf0\f1\fs22\par
updated android api to 7.1.1\par
\par
4/12/2017 - \par
\tab updated phone to android 7.1.2.  diagrammed setLookAt() and matrix math flow\par
\tab ported java only version to studio\par
\tab installed support files for android 2.3.3\par
\tab upgraded android gradle plugin  from 2.3.0 --> 3.3\par
\par
4/13-\par
\tab fixed Matrix3x3::frustum()\par
4/14-\par
\tab enabled VT-x in BIOS for intel HAXM.  AVD debugging is very slow.\par
\tab vertex attrib location was not being called.\par
\tab 'grey' screen when running native.  running java side, it goes black: idea.. log all gl calls in java side.  ensure the same sequence of calls are called on native version.\par
\tab fixed: 'up' vector depends on device orientation (landscape/portrait).  fixed so using that now for camera matrix setup\par
\tab simplify, just draw a line to start...\par
\tab idea: have boolean for drawing obelisk only, or entire scene\par
4/18-\par
\tab simplified code to only draw a single line on screen\par
\tab found & fixed bug- matrix multiplication was not working due to error in dot product function (no column multiplier)\par
\tab info: glDrawElements has 0 based indicies.\par
\tab simplified code variables on java project & native project\par
4/19-\par
\tab figuring out glDrawElements().  indicies param can be groups of elements (ex: like 3 floats/vertex)\par
4/20-\par
\tab figuring out resizingArray & if malloc() is working (can't inspect array values in android studio)\par
4/24-\par
\tab resizing array finally working except for assign().  got obelisk-only drawing working with GL_LINES.  cleaned up code and removed commented/unused blocks. tightened up resizingArray.h\par
\par
4/26-\par
\tab * code re-organization and cleanup, remove sceneManager methods outside class. class now has stubs only for member functions\par
\tab * draw using GL_TRIANGLES\par
\tab * experimenting with color attributes- discovered colors (specified by glVertexAttribPointer()) are bound to their vertices(also specified by glVertexAttribPointer) and not their element indices when using glDrawElements() to specifiy indices for GL_TRIANGLES.  would like a method to \par
\par
4/27-\par
\tab * enabled backface culling\par
\tab * added members for particle components, colors, indices\par
\tab * code re-organization.  added helper funcs for drawing volcano, particles, etc.\par
\tab * got particles drawing, but they are shooting straight down & wrong colors, so some transformation is not happening.  compare with java version\par
\tab * fixed random() function, was returning 0.0 always\par
\tab * notice short pause of a couple seconds, then particles clean up and resume again.\par
\par
4/29-\par
\tab continued trying to isolate bug by printing out matricies and vectors.\par
\par
5/1- \par
\tab * mapped out high level sequence of events in in drawframe()\par
\tab * fixed particles going straight down bug.  AParticle() constructor was not saving the direction x,y,z params to the corresponding members.\par
\par
5/3-\par
\tab * draw flags working, tested obelisk only & particles only.  \par
\tab * code cleanup, remove commented java\par
5/5-\par
\tab * cleaned up code a bit, moved particle data initialization code into their own functions in constructor\par
\tab * started checking in project to github. \par
\tab * moved project directory to z: drive\par
\tab * identifying minimum dirs/files to build project.  folders not needed: build, gradle, \par
\tab * created list of used git commands\par
\tab * moved this log(work log.rtf) to project directory\par
5/6-\par
\tab * updated nexus 5x to android OS version 7.1.2 N2G47O\par
5/11-\par
\tab * todo: try moving project with different responses to gradle dialog- not needed use gradle wrapper\par
\tab * found minimum files needed for source control and android studio to open a manually copied project file structure\par
5/12-\par
\tab * finalized set of files in source control by removing final unnecesary files.  downloaded atom editor x64 version for lightweight viewer of txt files\par
\tab * IMPORTANT NOTE: the project path cannot contain any spaces or there will be gradle sync errors saying can't find Android.mk, or can't find NDK-BUILD-DIR, etc.  removed spaces in build DIR\par
5/16- \tab * examined random particle generation code and thought about refactor. \par
5/17- \tab * looking into portrait mode bug.  downloaded windows 10 ISO.\par
\tab * create gluLookAt() function on java demo and try replacing setLookAtM() to see if it works. songho's site: {{\field{\*\fldinst{HYPERLINK http://songho.ca/opengl/gl_camera.html#lookat }}{\fldrslt{http://songho.ca/opengl/gl_camera.html#lookat\ul0\cf0}}}}\f1\fs22\par
\tab * need supporting Vector methods: subtract, cross product, normalize, etc.\par
\tab * small cleanups to shaders\par
5/18-\tab * added handmade setLookAt() in java version\par
\tab * ported setLookAt() to c++/native, also some supporting Vec3 methods\par
\tab * fixed bug with sideways triangle in portrait mode, now using handmade setLookAt()\par
5/19-    * minor progress towards ground polygon\par
5/20-\tab * " " " " "\par
5/22-    * working:  non-textured ground \par
 \tab * implemented wireframe/filled flag\par
\tab * renamed shaders to .vp/fp extension\par
\tab * initial work toward texture program for ground quad (modified shaders, res strings for tex shaders)\par
5/23-     * refactor code to use 2 GL programs, 2nd one for texturing.  \par
\tab * compiling & linking texture vertex/shader pair\par
\tab * initial GL client code to setup texturing (setupGroundData()).\par
\tab * code cleanup.\par
\tab * added programming toolbox document to google docs with code snips.\par
\par
5/24-  \tab * attempting to debug why glGetVertexAttribLocation() fails when attempting to get vertex shader texture coordinate value\par
5/25-\tab * same as yesterday.  fixed bug!  cleaned up shaders, the whole pipeline of an attribute has to match in both shaders to not get optimized out.  also client code was quering the wrong attribute string.  removed line in shader\par
5/26-\tab * still no textures, tried changing clearcolor & setting texparametri(). added code to cycle between display modes\par
}
 